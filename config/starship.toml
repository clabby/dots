format = """
$time\
$rust\
$golang\
$username\
[@](bold black)\
$directory\
[:](bold black)\
${custom.git_branch}\
${custom.git_status}\
${custom.git_commit}\
${custom.jj}\
$cmd_duration
$character\
"""

[character]
success_symbol = '[](purple)'
error_symbol = '[](bold red)'

[time]
format = '[\[$time\]]($style) '
time_format = '%H:%M'
style = 'bold black'
disabled = false

[username]
style_user = 'bold green'
style_root = 'bold purple'
format = '[$user]($style)'
disabled = false
show_always = true
aliases = { 'ben' = 'cl' }

[directory]
format = '[$path]($style)[$read_only]($read_only_style)'
style = 'bold blue'

[git_branch]
symbol = ' '
style = 'bold yellow'
format = '[$branch]($style)'

[git_commit]
tag_disabled = false
tag_symbol = '  '
style = 'yellow'

[cmd_duration]
style = 'bold cyan'

[rust]
format = '[$symbol($version)]($style) '

[golang]
format = '[$symbol($version)]($style) '

[custom.git_branch]
when = true
command = "jj root --ignore-working-copy >/dev/null 2>&1 || starship module git_branch"

[custom.git_status]
when = true
command = "jj root --ignore-working-copy >/dev/null 2>&1 || starship module git_status"

[custom.git_commit]
when = true
command = "jj root --ignore-working-copy >/dev/null 2>&1 || starship module git_commit"

# custom module for jj status
[custom.jj]
ignore_timeout = true
description = "The current jj status"
detect_folders = [".jj"]
symbol = ""
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    raw_escape_sequence("\x1b[1;33m") ++ "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ coalesce(
      description.first_line(),
      "(no description set)",
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

